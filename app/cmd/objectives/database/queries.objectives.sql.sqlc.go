// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: queries.objectives.sql

package database

import (
	"context"

	"logbook/models/columns"
)

const insertNewObjective = `-- name: InsertNewObjective :one
INSERT INTO "objective"("based", "created_by", "props")
    VALUES ('00000000-0000-0000-0000-000000000000', $1, $2)
RETURNING
    oid, vid, based, created_by, props, created_at
`

type InsertNewObjectiveParams struct {
	CreatedBy columns.OperationId
	Props     columns.PropertiesId
}

func (q *Queries) InsertNewObjective(ctx context.Context, arg InsertNewObjectiveParams) (Objective, error) {
	row := q.db.QueryRow(ctx, insertNewObjective, arg.CreatedBy, arg.Props)
	var i Objective
	err := row.Scan(
		&i.Oid,
		&i.Vid,
		&i.Based,
		&i.CreatedBy,
		&i.Props,
		&i.CreatedAt,
	)
	return i, err
}

const insertUpdatedObjective = `-- name: InsertUpdatedObjective :one
INSERT INTO "objective"("oid", "based", "created_by", "props")
    VALUES ($1, $2, $3, $4)
RETURNING
    oid, vid, based, created_by, props, created_at
`

type InsertUpdatedObjectiveParams struct {
	Oid       columns.ObjectiveId
	Based     columns.VersionId
	CreatedBy columns.OperationId
	Props     columns.PropertiesId
}

func (q *Queries) InsertUpdatedObjective(ctx context.Context, arg InsertUpdatedObjectiveParams) (Objective, error) {
	row := q.db.QueryRow(ctx, insertUpdatedObjective,
		arg.Oid,
		arg.Based,
		arg.CreatedBy,
		arg.Props,
	)
	var i Objective
	err := row.Scan(
		&i.Oid,
		&i.Vid,
		&i.Based,
		&i.CreatedBy,
		&i.Props,
		&i.CreatedAt,
	)
	return i, err
}

const selectObjective = `-- name: SelectObjective :one
SELECT
    oid, vid, based, created_by, props, created_at
FROM
    "objective"
WHERE
    "oid" = $1
    AND "vid" = $2
LIMIT 1
`

type SelectObjectiveParams struct {
	Oid columns.ObjectiveId
	Vid columns.VersionId
}

func (q *Queries) SelectObjective(ctx context.Context, arg SelectObjectiveParams) (Objective, error) {
	row := q.db.QueryRow(ctx, selectObjective, arg.Oid, arg.Vid)
	var i Objective
	err := row.Scan(
		&i.Oid,
		&i.Vid,
		&i.Based,
		&i.CreatedBy,
		&i.Props,
		&i.CreatedAt,
	)
	return i, err
}

// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: queries.sql

package database

import (
	"context"

	"logbook/models/columns"
)

const selectTagsByObjectiveId = `-- name: SelectTagsByObjectiveId :many
SELECT
  tid, oid, vid, deleted, created_at
FROM
  "tagging"
WHERE
  "oid" = $1
  AND "vid" = $2
  AND NOT "deleted"
`

type SelectTagsByObjectiveIdParams struct {
	Oid columns.ObjectiveId
	Vid columns.VersionId
}

func (q *Queries) SelectTagsByObjectiveId(ctx context.Context, arg SelectTagsByObjectiveIdParams) ([]Tagging, error) {
	rows, err := q.db.Query(ctx, selectTagsByObjectiveId, arg.Oid, arg.Vid)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Tagging
	for rows.Next() {
		var i Tagging
		if err := rows.Scan(
			&i.Tid,
			&i.Oid,
			&i.Vid,
			&i.Deleted,
			&i.CreatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

// Code generated by gonfique. DO NOT EDIT.

package deployment

import (
	"fmt"
	"gopkg.in/yaml.v3"
	"os"
	"time"
)

func (s ServiceDiscovery) Range() map[string]UpdatePeriod {
	return map[string]UpdatePeriod{"update-period": s.UpdatePeriod}
}
func (p Ports) Range() map[string]string {
	return map[string]string{"accounts": p.Accounts, "objectives": p.Objectives}
}

type GracePeriod time.Duration
type IdleTimeout time.Duration
type Ports struct {
	Accounts   string `yaml:"accounts"`
	Objectives string `yaml:"objectives"`
}
type ReadTimeout time.Duration
type RequestTimeout time.Duration
type Router struct {
	GracePeriod    GracePeriod    `yaml:"grace-period"`
	IdleTimeout    IdleTimeout    `yaml:"idle-timeout"`
	ReadTimeout    ReadTimeout    `yaml:"read-timeout"`
	RequestTimeout RequestTimeout `yaml:"request-timeout"`
	WriteTimeout   WriteTimeout   `yaml:"write-timeout"`
}
type ServiceDiscovery struct {
	UpdatePeriod UpdatePeriod `yaml:"update-period"`
}
type UpdatePeriod time.Duration
type WriteTimeout time.Duration
type Config struct {
	Ports            Ports            `yaml:"ports"`
	Router           Router           `yaml:"router"`
	ServiceDiscovery ServiceDiscovery `yaml:"service-discovery"`
}

func ReadConfig(path string) (*Config, error) {
	file, err := os.Open(path)
	if err != nil {
		return nil, fmt.Errorf("opening config file: %w", err)
	}
	defer file.Close()
	c := &Config{}
	err = yaml.NewDecoder(file).Decode(c)
	if err != nil {
		return nil, fmt.Errorf("decoding config file: %w", err)
	}
	return c, nil
}

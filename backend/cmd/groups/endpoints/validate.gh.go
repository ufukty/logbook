// Code generated by gohandlers v0.32.0. DO NOT EDIT.

package endpoints

func (bq CheckMembershipRequest) Validate() (issues map[string]any) {
	issues = map[string]any{}
	if issue := bq.Gid.Validate(); issue != nil {
		issues["gid"] = issue
	}
	if issue := bq.Uid.Validate(); issue != nil {
		issues["uid"] = issue
	}
	return
}

func (bq CheckMembershipEventualRequest) Validate() (issues map[string]any) {
	issues = map[string]any{}
	if issue := bq.Gid.Validate(); issue != nil {
		issues["gid"] = issue
	}
	if issue := bq.Uid.Validate(); issue != nil {
		issues["uid"] = issue
	}
	return
}

func (bq CreateGroupRequest) Validate() (issues map[string]any) {
	issues = map[string]any{}
	if issue := bq.Name.Validate(); issue != nil {
		issues["name"] = issue
	}
	return
}

func (bq InviteMembersRequest) Validate() (issues map[string]any) {
	issues = map[string]any{}
	if issue := bq.Gid.Validate(); issue != nil {
		issues["gid"] = issue
	}
	if issue := bq.GroupTypeMembers.Validate(); issue != nil {
		issues["user-type-members"] = issue
	}
	if issue := bq.UserTypeMembers.Validate(); issue != nil {
		issues["group-type-members"] = issue
	}
	return
}

func (bq RespondToGroupInviteRequest) Validate() (issues map[string]any) {
	issues = map[string]any{}
	if issue := bq.Ginvid.Validate(); issue != nil {
		issues["ginvid"] = issue
	}
	if issue := bq.MemberType.Validate(); issue != nil {
		issues["member-type"] = issue
	}
	if issue := bq.Response.Validate(); issue != nil {
		issues["response"] = issue
	}
	return
}

func (bq RespondToUserInviteRequest) Validate() (issues map[string]any) {
	issues = map[string]any{}
	if issue := bq.Ginvid.Validate(); issue != nil {
		issues["ginvid"] = issue
	}
	if issue := bq.MemberType.Validate(); issue != nil {
		issues["member-type"] = issue
	}
	if issue := bq.Response.Validate(); issue != nil {
		issues["response"] = issue
	}
	return
}

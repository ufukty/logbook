// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package database

import (
	"database/sql/driver"
	"fmt"

	"github.com/jackc/pgx/v5/pgtype"
	"logbook/models/columns"
)

type GroupInviteStatus string

const (
	GroupInviteStatusSent     GroupInviteStatus = "sent"
	GroupInviteStatusAccepted GroupInviteStatus = "accepted"
	GroupInviteStatusRejected GroupInviteStatus = "rejected"
)

func (e *GroupInviteStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = GroupInviteStatus(s)
	case string:
		*e = GroupInviteStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for GroupInviteStatus: %T", src)
	}
	return nil
}

type NullGroupInviteStatus struct {
	GroupInviteStatus GroupInviteStatus
	Valid             bool // Valid is true if GroupInviteStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullGroupInviteStatus) Scan(value interface{}) error {
	if value == nil {
		ns.GroupInviteStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.GroupInviteStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullGroupInviteStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.GroupInviteStatus), nil
}

type Delegation struct {
	Delid     columns.DelegationId
	Caid      columns.ControlAreaId
	Delegator columns.UserId
	Delegee   columns.UserId
	CreatedAt pgtype.Timestamp
	DeletedAt pgtype.Timestamp
}

type Group struct {
	Gid       columns.GroupId
	Name      string
	Creator   columns.UserId
	CreatedAt pgtype.Timestamp
	DeletedAt pgtype.Timestamp
}

type GroupInviteGroup struct {
	Ginvid    columns.GroupInviteId
	Inviter   columns.UserId
	Invitee   columns.GroupId
	Status    GroupInviteStatus
	CreatedAt pgtype.Timestamp
}

type GroupInviteUser struct {
	Ginvid    columns.GroupInviteId
	Inviter   columns.UserId
	Invitee   columns.UserId
	Status    GroupInviteStatus
	CreatedAt pgtype.Timestamp
}

type GroupMemberGroup struct {
	Gmid      columns.GroupMembershipId
	Gid       columns.GroupId
	Member    columns.GroupId
	Ginvid    columns.GroupInviteId
	CreatedAt pgtype.Timestamp
	DeletedAt pgtype.Timestamp
}

type GroupMemberUser struct {
	Gmid      columns.GroupMembershipId
	Gid       columns.GroupId
	Member    columns.UserId
	Ginvid    columns.GroupInviteId
	CreatedAt pgtype.Timestamp
	DeletedAt pgtype.Timestamp
}

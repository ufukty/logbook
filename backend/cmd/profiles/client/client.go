// Code generated by gohandlers v0.37.0. DO NOT EDIT.

package profiles

import (
	"fmt"
	"logbook/cmd/profiles/endpoints"
	"net/http"
)

type Interface interface {
	CreateProfile(*endpoints.CreateProfileRequest) (*http.Response, error)
}

type Mock struct {
	CreateProfileFunc func(*endpoints.CreateProfileRequest) (*http.Response, error)
}

func (m *Mock) CreateProfile(bq *endpoints.CreateProfileRequest) (*http.Response, error) {
	if m.CreateProfileFunc == nil {
		return nil, fmt.Errorf("not implemented: CreateProfile")
	}
	return m.CreateProfileFunc(bq)
}

type Pool interface {
	Host() (string, error)
}

type Client struct {
	p Pool
}

func NewClient(p Pool) *Client {
	return &Client{p: p}
}

func (c *Client) CreateProfile(bq *endpoints.CreateProfileRequest) (*http.Response, error) {
	h, err := c.p.Host()
	if err != nil {
		return nil, fmt.Errorf("selecting host: %w", err)
	}
	rq, err := bq.Build(h)
	if err != nil {
		return nil, fmt.Errorf("building request: %w", err)
	}
	rs, err := http.DefaultClient.Do(rq)
	if err != nil {
		return nil, fmt.Errorf("sending: %w", err)
	}
	if rs.StatusCode != http.StatusOK {
		return rs, fmt.Errorf("non-200 status code: %d (%s)", rs.StatusCode, http.StatusText(rs.StatusCode))
	}
	return rs, nil
}

// Code generated by gohandlers v0.30.0. DO NOT EDIT.

package endpoints

func (bq CreateAccountRequest) Validate() (issues map[string]any) {
	issues = map[string]any{}
	if issue := bq.AntiCsrfToken.Validate(); issue != nil {
		issues["acsrft"] = issue
	}
	if issue := bq.Birthday.Validate(); issue != nil {
		issues["birthday"] = issue
	}
	if issue := bq.Country.Validate(); issue != nil {
		issues["country"] = issue
	}
	if issue := bq.EmailGrant.Validate(); issue != nil {
		issues["email-grant"] = issue
	}
	if issue := bq.Firstname.Validate(); issue != nil {
		issues["firstname"] = issue
	}
	if issue := bq.Lastname.Validate(); issue != nil {
		issues["lastname"] = issue
	}
	if issue := bq.PasswordGrant.Validate(); issue != nil {
		issues["password-grant"] = issue
	}
	if issue := bq.PhoneGrant.Validate(); issue != nil {
		issues["phone-grant"] = issue
	}
	return
}

func (bq CreateEmailGrantRequest) Validate() (issues map[string]any) {
	issues = map[string]any{}
	if issue := bq.AntiCsrfToken.Validate(); issue != nil {
		issues["acsrft"] = issue
	}
	if issue := bq.Email.Validate(); issue != nil {
		issues["email"] = issue
	}
	return
}

func (bq CreatePasswordGrantRequest) Validate() (issues map[string]any) {
	issues = map[string]any{}
	if issue := bq.AntiCsrfToken.Validate(); issue != nil {
		issues["acsrft"] = issue
	}
	if issue := bq.Password.Validate(); issue != nil {
		issues["password"] = issue
	}
	return
}

func (bq CreatePhoneGrantRequest) Validate() (issues map[string]any) {
	issues = map[string]any{}
	if issue := bq.AntiCsrfToken.Validate(); issue != nil {
		issues["acsrft"] = issue
	}
	if issue := bq.Phone.Validate(); issue != nil {
		issues["phone"] = issue
	}
	return
}

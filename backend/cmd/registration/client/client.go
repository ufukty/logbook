// Code generated by gohandlers v0.17.0. DO NOT EDIT.

package registration

import (
	"fmt"
	"logbook/cmd/registration/endpoints"
	"net/http"
)

type Pool interface {
	Host() (string, error)
}

type Client struct {
	p Pool
}

func NewClient(p Pool) *Client {
	return &Client{p: p}
}

func (c *Client) CreateAccount(bq *endpoints.CreateAccountRequest) (*http.Response, error) {
	h, err := c.p.Host()
	if err != nil {
		return nil, fmt.Errorf("Host: %w", err)
	}
	rq, err := bq.Build(h)
	if err != nil {
		return nil, fmt.Errorf("Build: %w", err)
	}
	rs, err := http.DefaultClient.Do(rq)
	if err != nil {
		return nil, fmt.Errorf("Do: %w", err)
	}
	if rs.StatusCode != http.StatusOK {
		return rs, fmt.Errorf("non-200 status code: %d (%s)", rs.StatusCode, http.StatusText(rs.StatusCode))
	}
	return rs, nil
}

func (c *Client) GetEmailGrant(bq *endpoints.GetEmailGrantRequest) (*endpoints.GetEmailGrantResponse, error) {
	h, err := c.p.Host()
	if err != nil {
		return nil, fmt.Errorf("Host: %w", err)
	}
	rq, err := bq.Build(h)
	if err != nil {
		return nil, fmt.Errorf("Build: %w", err)
	}
	rs, err := http.DefaultClient.Do(rq)
	if err != nil {
		return nil, fmt.Errorf("Do: %w", err)
	}
	if rs.StatusCode != http.StatusOK {
		return nil, fmt.Errorf("non-200 status code: %d (%s)", rs.StatusCode, http.StatusText(rs.StatusCode))
	}
	bs := &endpoints.GetEmailGrantResponse{}
	err = bs.Parse(rs)
	if err != nil {
		return nil, fmt.Errorf("Parse: %w", err)
	}
	return bs, nil
}

func (c *Client) GetPasswordGrant(bq *endpoints.GetPasswordGrantRequest) (*endpoints.GetPasswordGrantResponse, error) {
	h, err := c.p.Host()
	if err != nil {
		return nil, fmt.Errorf("Host: %w", err)
	}
	rq, err := bq.Build(h)
	if err != nil {
		return nil, fmt.Errorf("Build: %w", err)
	}
	rs, err := http.DefaultClient.Do(rq)
	if err != nil {
		return nil, fmt.Errorf("Do: %w", err)
	}
	if rs.StatusCode != http.StatusOK {
		return nil, fmt.Errorf("non-200 status code: %d (%s)", rs.StatusCode, http.StatusText(rs.StatusCode))
	}
	bs := &endpoints.GetPasswordGrantResponse{}
	err = bs.Parse(rs)
	if err != nil {
		return nil, fmt.Errorf("Parse: %w", err)
	}
	return bs, nil
}

func (c *Client) GetPhoneGrant(bq *endpoints.GetPhoneGrantRequest) (*endpoints.GetPhoneGrantResponse, error) {
	h, err := c.p.Host()
	if err != nil {
		return nil, fmt.Errorf("Host: %w", err)
	}
	rq, err := bq.Build(h)
	if err != nil {
		return nil, fmt.Errorf("Build: %w", err)
	}
	rs, err := http.DefaultClient.Do(rq)
	if err != nil {
		return nil, fmt.Errorf("Do: %w", err)
	}
	if rs.StatusCode != http.StatusOK {
		return nil, fmt.Errorf("non-200 status code: %d (%s)", rs.StatusCode, http.StatusText(rs.StatusCode))
	}
	bs := &endpoints.GetPhoneGrantResponse{}
	err = bs.Parse(rs)
	if err != nil {
		return nil, fmt.Errorf("Parse: %w", err)
	}
	return bs, nil
}

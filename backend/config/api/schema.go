// Code generated by gonfique. DO NOT EDIT.

package api

import (
	"fmt"
	"gopkg.in/yaml.v3"
	"os"
)

type Account struct {
	Endpoints accountEndpoints `yaml:"endpoints"`
	Path      string           `yaml:"path"`
	Parent    any              `yaml:"-"`
}
type Document struct {
	Endpoints documentEndpoints `yaml:"endpoints"`
	Path      string            `yaml:"path"`
	Parent    any               `yaml:"-"`
}
type Groups struct {
	Endpoints groupsEndpoints `yaml:"endpoints"`
	Path      string          `yaml:"path"`
	Parent    any             `yaml:"-"`
}
type Internal struct {
	Path     string   `yaml:"path"`
	Services services `yaml:"services"`
}
type Objectives struct {
	Endpoints objectivesEndpoints `yaml:"endpoints"`
	Path      string              `yaml:"path"`
	Parent    any                 `yaml:"-"`
}
type Public struct {
	Path     string         `yaml:"path"`
	Services publicServices `yaml:"services"`
}
type Registry struct {
	Endpoints endpoints `yaml:"endpoints"`
	Path      string    `yaml:"path"`
	Parent    any       `yaml:"-"`
}
type Tags struct {
	Endpoints tagsEndpoints `yaml:"endpoints"`
	Path      string        `yaml:"path"`
	Parent    any           `yaml:"-"`
}
type accountEndpoints struct {
	CreateProfile   endpoint `yaml:"create_profile"`
	CreateUser      endpoint `yaml:"create_user"`
	Login           endpoint `yaml:"login"`
	Logout          endpoint `yaml:"logout"`
	Register        endpoint `yaml:"register"`
	ReserveUsername endpoint `yaml:"reserve_username"`
	Totp            endpoint `yaml:"totp"`
	VerifyEmail     endpoint `yaml:"verify_email"`
	VerifyPhone     endpoint `yaml:"verify_phone"`
	Whoami          endpoint `yaml:"whoami"`
	Parent          any      `yaml:"-"`
}
type documentEndpoints struct {
	List   endpoint `yaml:"list"`
	Parent any      `yaml:"-"`
}
type endpoint struct {
	Method string `yaml:"method"`
	Path   string `yaml:"path"`
	Parent any    `yaml:"-"`
}
type endpoints struct {
	ListInstances    endpoint `yaml:"list-instances"`
	RecheckInstance  endpoint `yaml:"recheck-instance"`
	RegisterInstance endpoint `yaml:"register-instance"`
	Parent           any      `yaml:"-"`
}
type groupsEndpoints struct {
	Create endpoint `yaml:"create"`
	Parent any      `yaml:"-"`
}
type objectivesEndpoints struct {
	Attach     endpoint `yaml:"attach"`
	Create     endpoint `yaml:"create"`
	Delete     endpoint `yaml:"delete"`
	Mark       endpoint `yaml:"mark"`
	Placement  endpoint `yaml:"placement"`
	RockCreate endpoint `yaml:"rock-create"`
	Parent     any      `yaml:"-"`
}
type publicServices struct {
	Account    Account    `yaml:"account"`
	Document   Document   `yaml:"document"`
	Groups     Groups     `yaml:"groups"`
	Objectives Objectives `yaml:"objectives"`
	Tags       Tags       `yaml:"tags"`
	Parent     any        `yaml:"-"`
}
type services struct {
	Registry Registry `yaml:"registry"`
	Parent   any      `yaml:"-"`
}
type tagsEndpoints struct {
	Assign   endpoint `yaml:"assign"`
	Creation endpoint `yaml:"creation"`
	Parent   any      `yaml:"-"`
}
type Config struct {
	Internal Internal `yaml:"internal"`
	Public   Public   `yaml:"public"`
}

func parentRefAssignments(c *Config) {
	c.Internal.Services.Parent = &c.Internal
	c.Internal.Services.Registry.Parent = &c.Internal.Services
	c.Internal.Services.Registry.Endpoints.Parent = &c.Internal.Services.Registry
	c.Internal.Services.Registry.Endpoints.ListInstances.Parent = &c.Internal.Services.Registry.Endpoints
	c.Internal.Services.Registry.Endpoints.RecheckInstance.Parent = &c.Internal.Services.Registry.Endpoints
	c.Internal.Services.Registry.Endpoints.RegisterInstance.Parent = &c.Internal.Services.Registry.Endpoints
	c.Public.Services.Parent = &c.Public
	c.Public.Services.Account.Parent = &c.Public.Services
	c.Public.Services.Account.Endpoints.Parent = &c.Public.Services.Account
	c.Public.Services.Account.Endpoints.CreateProfile.Parent = &c.Public.Services.Account.Endpoints
	c.Public.Services.Account.Endpoints.CreateUser.Parent = &c.Public.Services.Account.Endpoints
	c.Public.Services.Account.Endpoints.Login.Parent = &c.Public.Services.Account.Endpoints
	c.Public.Services.Account.Endpoints.Logout.Parent = &c.Public.Services.Account.Endpoints
	c.Public.Services.Account.Endpoints.Register.Parent = &c.Public.Services.Account.Endpoints
	c.Public.Services.Account.Endpoints.ReserveUsername.Parent = &c.Public.Services.Account.Endpoints
	c.Public.Services.Account.Endpoints.Totp.Parent = &c.Public.Services.Account.Endpoints
	c.Public.Services.Account.Endpoints.VerifyEmail.Parent = &c.Public.Services.Account.Endpoints
	c.Public.Services.Account.Endpoints.VerifyPhone.Parent = &c.Public.Services.Account.Endpoints
	c.Public.Services.Account.Endpoints.Whoami.Parent = &c.Public.Services.Account.Endpoints
	c.Public.Services.Document.Parent = &c.Public.Services
	c.Public.Services.Document.Endpoints.Parent = &c.Public.Services.Document
	c.Public.Services.Document.Endpoints.List.Parent = &c.Public.Services.Document.Endpoints
	c.Public.Services.Groups.Parent = &c.Public.Services
	c.Public.Services.Groups.Endpoints.Parent = &c.Public.Services.Groups
	c.Public.Services.Groups.Endpoints.Create.Parent = &c.Public.Services.Groups.Endpoints
	c.Public.Services.Objectives.Parent = &c.Public.Services
	c.Public.Services.Objectives.Endpoints.Parent = &c.Public.Services.Objectives
	c.Public.Services.Objectives.Endpoints.Attach.Parent = &c.Public.Services.Objectives.Endpoints
	c.Public.Services.Objectives.Endpoints.Create.Parent = &c.Public.Services.Objectives.Endpoints
	c.Public.Services.Objectives.Endpoints.Delete.Parent = &c.Public.Services.Objectives.Endpoints
	c.Public.Services.Objectives.Endpoints.Mark.Parent = &c.Public.Services.Objectives.Endpoints
	c.Public.Services.Objectives.Endpoints.Placement.Parent = &c.Public.Services.Objectives.Endpoints
	c.Public.Services.Objectives.Endpoints.RockCreate.Parent = &c.Public.Services.Objectives.Endpoints
	c.Public.Services.Tags.Parent = &c.Public.Services
	c.Public.Services.Tags.Endpoints.Parent = &c.Public.Services.Tags
	c.Public.Services.Tags.Endpoints.Assign.Parent = &c.Public.Services.Tags.Endpoints
	c.Public.Services.Tags.Endpoints.Creation.Parent = &c.Public.Services.Tags.Endpoints
}
func ReadConfig(path string) (*Config, error) {
	file, err := os.Open(path)
	if err != nil {
		return nil, fmt.Errorf("opening config file: %w", err)
	}
	defer file.Close()
	c := &Config{}
	err = yaml.NewDecoder(file).Decode(c)
	if err != nil {
		return nil, fmt.Errorf("decoding config file: %w", err)
	}
	parentRefAssignments(c)
	return c, nil
}
func (a Account) GetParent() any {
	return a.Parent
}
func (a Account) GetPath() string {
	return a.Path
}
func (a *Account) SetPath(v string) {
	a.Path = v
}
func (d Document) GetParent() any {
	return d.Parent
}
func (d Document) GetPath() string {
	return d.Path
}
func (d *Document) SetPath(v string) {
	d.Path = v
}
func (g Groups) GetParent() any {
	return g.Parent
}
func (g Groups) GetPath() string {
	return g.Path
}
func (g *Groups) SetPath(v string) {
	g.Path = v
}
func (i Internal) GetPath() string {
	return i.Path
}
func (i *Internal) SetPath(v string) {
	i.Path = v
}
func (o Objectives) GetParent() any {
	return o.Parent
}
func (o Objectives) GetPath() string {
	return o.Path
}
func (o *Objectives) SetPath(v string) {
	o.Path = v
}
func (p Public) GetPath() string {
	return p.Path
}
func (p *Public) SetPath(v string) {
	p.Path = v
}
func (r Registry) GetParent() any {
	return r.Parent
}
func (r Registry) GetPath() string {
	return r.Path
}
func (r *Registry) SetPath(v string) {
	r.Path = v
}
func (t Tags) GetParent() any {
	return t.Parent
}
func (t Tags) GetPath() string {
	return t.Path
}
func (t *Tags) SetPath(v string) {
	t.Path = v
}
func (a accountEndpoints) GetParent() any {
	return a.Parent
}
func (d documentEndpoints) GetParent() any {
	return d.Parent
}
func (e endpoint) GetMethod() string {
	return e.Method
}
func (e endpoint) GetParent() any {
	return e.Parent
}
func (e endpoint) GetPath() string {
	return e.Path
}
func (e *endpoint) SetMethod(v string) {
	e.Method = v
}
func (e *endpoint) SetPath(v string) {
	e.Path = v
}
func (e endpoints) GetParent() any {
	return e.Parent
}
func (g groupsEndpoints) GetParent() any {
	return g.Parent
}
func (o objectivesEndpoints) GetParent() any {
	return o.Parent
}
func (p publicServices) GetParent() any {
	return p.Parent
}
func (s services) GetParent() any {
	return s.Parent
}
func (t tagsEndpoints) GetParent() any {
	return t.Parent
}
